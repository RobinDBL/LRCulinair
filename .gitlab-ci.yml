# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
# image: angular/ngcontainer


stages:          # List of stages for jobs, and their order of execution
  - build
  - package
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  image: robindbl/angular-cli
  stage: build
  artifacts:
    paths:
      - dist/*
    expire_in: 1 hour
  script:
    - echo "Compiling the code..."
    - npm install
    - ng build
    - echo "Compile complete."


services:
    - name: docker:18.09.7-dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
    
variables:
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""

build-docker-container:

  before_script:
    - docker info
  
  image: docker:19.03.12
  stage: package
  needs: 
    - job: build-job
      artifacts: true
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/robindbl/lrculinair:latest .
    - docker push $CI_REGISTRY/robindbl/lrculinair:latest


deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
